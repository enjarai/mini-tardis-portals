plugins {
	id 'fabric-loom' version '1.4-SNAPSHOT'
	id 'maven-publish'
}

version = project.mod_version
group = project.maven_group

base {
	archivesName = project.archives_base_name
}

repositories {
	// Add repositories to retrieve artifacts from in here.
	// You should only use this when depending on other mods because
	// Loom adds the essential maven repositories to download Minecraft and libraries from automatically.
	// See https://docs.gradle.org/current/userguide/declaring_repositories.html
	// for more information about repositories.

	maven {
		url 'https://maven.enjarai.dev/releases'
	}
	maven {
		url 'https://maven.enjarai.dev/mirrors'
	}

	// Transitive deps for minitardis
	maven {
		url 'https://maven.nucleoid.xyz/'
	}
	maven {
		url 'https://maven.ladysnake.org/releases'
	}

	// Immersive portals cringe jitpack
	maven {
		url 'https://jitpack.io'
	}
	maven {
		url 'https://maven.shedaniel.me'
	}
}

dependencies {
	// To change the versions see the gradle.properties file
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

	// Fabric API. This is technically optional, but you probably want it anyway.
	modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"

	modImplementation "dev.enjarai.minitardis:mini_tardis:${project.minitardis_version}"

//	modImplementation "xyz.nucleoid:fantasy:${project.fantasy_version}"
//	modImplementation "dev.onyxstudios.cardinal-components-api:cardinal-components-base:${project.cca_version}"

	modImplementation ("com.github.iPortalTeam.ImmersivePortalsMod:imm_ptl_core:${project.imm_ptl_version}")
	modImplementation ("com.github.iPortalTeam.ImmersivePortalsMod:q_misc_util:${project.imm_ptl_version}")
	modImplementation ("com.github.iPortalTeam.ImmersivePortalsMod:build:${project.imm_ptl_version}")
}

processResources {
	inputs.property "version", project.version

	filesMatching("fabric.mod.json") {
		expand "version": project.version
	}
}

tasks.withType(JavaCompile).configureEach {
	it.options.release = 17
}

java {
	// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
	// if it is present.
	// If you remove this line, sources will not be generated.
	withSourcesJar()

	sourceCompatibility = JavaVersion.VERSION_17
	targetCompatibility = JavaVersion.VERSION_17
}

jar {
	from("LICENSE") {
		rename { "${it}_${project.base.archivesName.get()}"}
	}
}

// configure the maven publication
publishing {
	repositories {
		maven {
			name = "enjaraiMaven"
			url = "https://maven.enjarai.nl/releases"
			credentials(PasswordCredentials)
			authentication {
				basic(BasicAuthentication)
			}
		}
	}

	publications {
		mavenJava(MavenPublication) {
			groupId = project.maven_group
			artifactId = archivesBaseName
			version = project.version

			from components.java
		}
	}
}